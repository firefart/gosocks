version: "3"

vars:
  PROGRAM: gosocks

tasks:
  update:
    cmds:
      - go get -u
      - go mod tidy -v

  build:
    aliases: [default]
    cmds:
      - go fmt ./...
      - go vet ./...
      - go build -o {{.OUTPUT_FILE | default .PROGRAM}} examples/default/main.go
    env:
      CGO_ENABLED: 0
      GOOS: '{{.GOOS | default "linux"}}'
      GOARCH: '{{.GOARCH | default "amd64"}}'

  linux:
    cmds:
      - task: build
        vars:
          GOOS: linux
          GOARCH: amd64

  windows:
    cmds:
      - task: build
        vars:
          OUTPUT_FILE: "{{.PROGRAM}}.exe"
          GOOS: windows
          GOARCH: amd64

  build-examples:
    cmds:
      - go build examples/default/main.go
      - go build examples/custom/main.go

  test:
    env:
      CGO_ENABLED: 1 # required by -race
    cmds:
      - go test -race -cover ./...

  lint:
    cmds:
      - golangci-lint run ./... --timeout=30m
      - go mod tidy

  lint-update:
    cmds:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b {{ .GOPATH }}/bin
      - golangci-lint --version
    vars:
      GOPATH:
        sh: go env GOPATH

  tag:
    cmds:
      - git tag -a "${TAG}" -m "${TAG}"
      - git push origin "${TAG}"
    preconditions:
      - sh: '[[ -n "${TAG}" ]]'
        msg: "Please set the TAG environment variable"
